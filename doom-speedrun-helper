#!/bin/bash

echo "Doom Speedrun Helper - by Mark Ridlen"

# This first part will help you configure doom-speedrun-helper
DOOM_SR_CONFIG=~/.doom-speedrun-helper
if [ ! -f "$DOOM_SR_CONFIG" ]; then
	echo "No configuration file found... starting manual configuration..."

	echo "Finding Ultimate Doom wad..."
	DOOMU_WAD=$(find ~ -name "doomu.wad" | head -n1)
	if [ -z "$DOOMU_WAD" ]; then
		DOOMU_ENABLED=0
	else
		DOOMU_ENABLED=1
	fi
	
	echo "Finding Doom 2 wad..."
	DOOM2_WAD=$(find ~ -name "doom2.wad" | head -n1)
	if [ -z "$DOOM2_WAD" ]; then
		DOOM2_ENABLED=0
	else
		DOOM2_ENABLED=1
	fi

	echo "Finding GZDoom..."
	GZDOOM_PATH=$(find ~ -type f -name "gzdoom")
	if [ -z "$GZDOOM_PATH" ]; then
		GZDOOM_ENABLED=0
	else
		GZDOOM_ENABLED=1
	fi

	echo "Finding prboom..."
	PRBOOM_PATH=$(command -v prboom)
	if [ -z "$PRBOOM_PATH" ]; then
		PRBOOM_ENABLED=0
	else
		PRBOOM_ENABLED=1
	fi

	echo "Finding prboom-plus..."
	PRBOOM_PLUS_PATH=$(command -v prboom-plus)
	if [ -z "$PRBOOM_PATH" ]; then
		PRBOOM_PLUS_ENABLED=0
	else
		PRBOOM_PLUS_ENABLED=1
	fi

	#echo "[TBD] Finding crispy..."

	#Dump all variables to configuration file
	touch ~/.doom-speedrun-helper
	echo "DOOMU_WAD=$DOOMU_WAD" >> ~/.doom-speedrun-helper
	echo "DOOM2_WAD=$DOOM2_WAD" >> ~/.doom-speedrun-helper
	echo "DOOMU_ENABLED=$DOOMU_ENABLED" >> ~/.doom-speedrun-helper
	echo "DOOM2_ENABLED=$DOOM2_ENABLED" >> ~/.doom-speedrun-helper
	echo "GZDOOM_PATH=$GZDOOM_PATH" >> ~/.doom-speedrun-helper
	echo "GZDOOM_ENABLED=$GZDOOM_ENABLED" >> ~/.doom-speedrun-helper
	echo "PRBOOM_PATH=$PRBOOM_PATH" >> ~/.doom-speedrun-helper
	echo "PRBOOM_ENABLED=$PRBOOM_ENABLED" >> ~/.doom-speedrun-helper
	echo "PRBOOM_PLUS_PATH=$PRBOOM_PLUS_PATH" >> ~/.doom-speedrun-helper
	echo "PRBOOM_PLUS_ENABLED=$PRBOOM_PLUS_ENABLED" >> ~/.doom-speedrun-helper

	echo " "
	echo "Configuration file written: ~/.doom-speedrun-helper"
	cat ~/.doom-speedrun-helper
fi

run_doom() {
	echo "Loading vars from file ${filelist[$selection]}..."
	source ${filelist[$selection]}
	source $DOOM_SR_CONFIG
	DEMO_DIR="demos/$(echo "${filelist[$selection]}" | awk -F "/" '{ print $2 }')"
	mkdir -p "$DEMO_DIR"
	echo "NAME: $NAME, IWAD: $IWAD, SKILL: $SKILL, STARTING_LEVEL: $STARTING_LEVEL"
	if [[ "$IWAD" == "DOOMU" ]]; then
		SELECTED_IWAD=$DOOMU_WAD
	fi
	echo "SELECTED_IWAD = $SELECTED_IWAD"

	key=''
	while [ "$key" = '' ]
	do
		read -n1 -r -p "Press any key to continue, or CTRL+C to quit..." key
		if [ "$key" != '#' ]; then
			# I need to grab the date here prior to building the command, because the date is the UUID of the lmp demo, down to the second
			CURRENT_DATE=$(date +%m"-"%d"-"%Y"_"%H"-"%M"-"%S).lmp
			DOOM_COMMAND="prboom-plus -config ~/prboom-plus.cfg -iwad $SELECTED_IWAD -warp $STARTING_LEVEL -skill $SKILL -record $DEMO_DIR/$IWAD-$SKILL-$CURRENT_DATE"
			#this command is what runs the pre-built doom command
			eval "$DOOM_COMMAND"
			printf "\n\nDo you want to try again?\n"
		fi
	done

	exit 0
}

play_existing_category() {
	echo "Playing Existing Speedrun Category"
	
	i=0
	for f in category/*
	do
		filelist[ $i ]=$f
		printf "$i) "
		cat $f | grep "NAME" | awk -F "=" '{ print $2 }'
		(( i++ ))
	done

	#echo "file list length = ${#filelist[@]}"

	read -p "> " selection

	run_doom
}

create_new_category() {
	echo "Creating New Speedrun Category"
	echo "Skill:"
	echo "0) No Monsters"
	echo "1) I'm Too Young To Die"
	echo "2) Hey Not Too Rough"
	echo "3) Hurt Me Plenty"
	echo "4) Ultraviolence"
	echo "5) Nightmare!"

	read -p "> " SKILL

	echo " "

	echo "Which Doom IWAD?"
	echo "1) Ultimate Doom"
	echo "2) Doom 2"

	read -p "> " IWAD

	echo " "
	
	read -p "Would you like to specify additional WAD(s) (Y/N)? " USE_WADS

	if [[ "$USE_WADS" == "y" || "$USE_WADS" == "Y" ]]; then
		read -p "Specify a semicolon (;) delimited list of WADs: " WADS
	fi

	echo " "
	
	echo "Starting Level? (Doom e.g.: '1 1' Doom 2 e.g.: '21')"

	read -p "> " STARTING_LEVEL

	echo " "

	read -p "Do you want to use a complevel (Y/N)? " USE_COMPLEVEL

	if [[ "$USE_COMPLEVEL" == "Y" || "$USE_COMPLEVEL" == "y" ]]; then
		read -p "What complevel (1-17)? " COMPLEVEL
	fi

	read -p "Do you want monsters to respawn (Y/N)? " RESPAWN
	read -p "Do you want fast monsters (Y/N)? " FAST
	read -p "Do you want to use "solo-net" (play single player with network game wad settings) (Y/N)? " SOLONET
	read -p "Do you want to use short tics (limited movement resolution) (Y/N)? " SHORTTICS
	read -p "Additional command line options (default: blank): " ADDITIONAL_OPTIONS
	read -p "Give your category a filename (no wildcards or spaces)? " FILENAME
	read -p "Give your category a nice name (spaces allowed)? " NAME

	#Output variables to screen and confirm
	echo " "
	echo "Here are the parameters you specified..."
	echo " "
	echo "SKILL: $SKILL"
	echo "IWAD: $IWAD"
	echo "STARTING_LEVEL: $STARTING_LEVEL"
	echo "USE_COMPLEVEL: $USE_COMPLEVEL"
	echo "COMPLEVEL: $COMPLEVEL"
	echo "RESPAWN: $RESPAWN"
	echo "FAST: $FAST"
	echo "SOLONET: $SOLONET"
	echo "SHORTTICS: $SHORTTICS"
	echo "ADDITIONAL_OPTIONS: $ADDITIONAL_OPTIONS"
	echo "FILENAME: $FILENAME"
	echo "NAME: $NAME"
	echo " "

	read -p "Does this look right (Y/N)?" CONFIRM

	if [[ "$CONFIRM" == "y" || "$CONFIRM" == "Y" ]]; then
		#We will assume this has already been validated by this point (will add in validation later once the product is functional)

		echo "Writing out file..."
	fi
}

render_demo_video() {
	echo "Rendering Demo Video"
}
if [ -f "$DOOM_SR_CONFIG" ]; then
	#This second part is a menu for configuring your speedrun

	echo "===================================="
	echo "= Welcome to DOOM Speedrun Helper! ="
	echo "===================================="
	echo " "
	echo "What would you like to do?"
	echo "1) Play Existing Category"
	echo "2) Create New Category"
	echo "3) Render Demo Video"
	echo "4) Exit"

	while :
	do
    		read -n1 -s
    		case "$REPLY" in
    			"1")  play_existing_category    ;;
    			"2")  create_new_category       ;;
    			"3")  render_demo_video         ;;
			"4")  exit			;;
    			"Q")  exit                      ;;
    			"q")  exit                      ;; 
     			* )  echo "invalid option"     ;;
    		esac
done
fi
